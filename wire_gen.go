// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"Boxed/cmd"
	"Boxed/database"
	"Boxed/internal/config"
	"Boxed/internal/handlers"
	"Boxed/internal/repository"
	"Boxed/internal/services"
)

// Injectors from wire.go:

func InitializeServer() (*cmd.Server, error) {
	db, err := database.SetupDatabase()
	if err != nil {
		return nil, err
	}
	boxRepository := repository.NewBoxRepository(db)
	boxService := services.NewBoxService(boxRepository)
	boxHandler := handlers.NewBoxHandler(boxService)
	itemRepository := repository.NewItemRepository(db)
	itemService := services.NewItemService(itemRepository)
	itemHandler := handlers.NewItemHandler(itemService)
	configuration, err := Provider()
	if err != nil {
		return nil, err
	}
	logService := services.NewLogService(configuration)
	fileService := services.NewFileService(itemService, boxService, logService, configuration)
	moverService := services.NewMoverService(itemService, boxService, fileService, configuration, logService)
	fileHandler := handlers.NewFileHandler(fileService, moverService)
	janitor := services.NewJanitorService(itemService, boxService, fileService, logService, configuration)
	server := cmd.NewServer(boxService, boxHandler, itemService, itemHandler, fileService, fileHandler, logService, janitor, moverService)
	return server, nil
}

// wire.go:

func Provider() (*config.Configuration, error) {
	return config.LoadConfiguration("boxed.yaml")
}
